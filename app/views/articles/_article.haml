%tr{class: "#{'not-ready' if (local_assigns[:mark_print_status] && !article.has_print_ready_draft?)}", id: "article_#{article.id}"}
  - if local_assigns[:display_rank]
    %td.center.rank
      - if can? :update_rank, Article
        = form_for article, remote: true, url: update_rank_article_url(article) do |f|
          = f.select :rank, Article::RANKS, {}
        %p.update-rank-result{id: "update_rank_result_#{article.id}"}
      - else
        = article[:rank]
  %td.statuses
    - if article.has_web_published_draft?
      - if article.has_pending_draft?
        %span.label.label-info Web: Has Update
      - else
        %span.label.label-success Web: Published
    - elsif article.has_web_ready_draft?
      %span.label.label-info Web: Ready
    - else
      %span.label.label-warning Web: Draft
    %br/
    - if article.has_print_ready_draft?
      %span.label.label-success Print: Ready
    - else
      %span.label.label-warning Print: Draft
  %td
    %p.headline
      %span.label.label-default V#{article.issue.volume} N#{article.issue.number}
      - unless local_assigns[:hide_section_name]
        %span.label.label-default= article.section.name.upcase
      - if article.newest_draft.primary_tag.present?
        %span.label.label-default= article.newest_draft.primary_tag.upcase
      %span.slug
        = link_to article.slug, [article, article.newest_draft], target: '_blank'
      • #{article.newest_draft.headline}
    %p
      %span.extra-info
        - if article.has_web_published_draft?
          Published online #{date_in_words article.oldest_web_published_draft.published_at} •
        Authored by #{article.newest_draft.authors_string}
  %td.actions
    - if article.has_pending_draft? and can? :edit, article
      = form_for [article, article.newest_web_ready_draft], remote: true do |f|
        = f.hidden_field :web_status, value: :web_published
        - if article.has_web_published_draft?
          = f.button 'Publish Update', class: 'btn btn-success btn-sm', data: {disable_with: loading_icon}
        - else
          = f.button 'Publish to Web', class: 'btn btn-success btn-sm', data: {disable_with: loading_icon}
    - if !article.has_web_published_draft? and can? :destroy, article
      = link_to 'Delete', article, method: :delete, class: 'btn btn-danger btn-sm', remote: true, data: {confirm: 'Are you sure that you want to delete the article "' + article.newest_draft.headline + '"? '}
    = link_to 'All Drafts', article_drafts_path(article), class: 'btn btn-default btn-sm', target: '_blank'